import React from "react";
import Head from "next/head";
import { Toaster } from "react-hot-toast";
import { useReactiveVar } from "@apollo/client";
import { AnimatePresence, motion } from "framer-motion";
import { Background, Menus, SideMenus } from "@components";
// import { menus } from "@/data";
import routes from "../routes";
import client, { currentMenu, currentWork, showMenu } from "@/apollo-client";
import { BiMenu } from "react-icons/bi";
import "react-loading-skeleton/dist/skeleton.css";
import profileOperations from "@graphQl/profileOps";
import { ProfileData } from "@/types";

const clipPaths = ["polygon(0 50%, 100% 50%, 100% 50%, 0 50%)", "polygon(50% 0, 50% 0, 50% 100%, 50% 100%)"];

interface Props {
  profileData: ProfileData;
}

const Home = ({ profileData }: Props) => {
  const menuId = useReactiveVar(currentMenu);
  const sideMenu = useReactiveVar(showMenu);

  return (
    <main className="relative flex items-center justify-center min-h-screen home">
      <Head>
        <title>Musinda Kadhuwa</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Background />
      <SideMenus profile={profileData} sideMenu={sideMenu} showMenu={showMenu} />
      <button
        onClick={() => showMenu(true)}
        className="fixed z-40 flex items-center justify-center text-white rounded-full top-6 right-6 w-14 h-14 bg-main-orange lg:hidden"
      >
        <BiMenu className="w-10 h-10" />
      </button>
      <section className="z-10 w-full h-full lg:w-[115rem] xl:w-[126.8rem] 2xl:w-[150rem] 2xl:h-[75rem] lg:h-[62.5rem] lg:flex p-10 sm:p-24 lg:p-0">
        <Menus showSideMenu={showMenu} />

        <div className="xl:w-full lg:w-[90%] w-full h-full lg:py-6">
          <div
            className="relative bg-gray-900 h-full before:content-[''] 
          before:absolute before:top-0 before:left-0 before:right-[0.7rem]
           before:h-6 before:bg-gray-900 before:z-30 after:content-['']
            after:absolute after:bottom-0 after:left-0 after:right-[0.7rem] 
            after:h-6 after:bg-gray-900 after:z-30"
          >
            <AnimatePresence mode="wait">
              {routes.map(
                (m) =>
                  menuId === m.id && (
                    <motion.div
                      key={m.id}
                      className="w-full h-full max-h-full bg-gray-900"
                      initial="initialState"
                      animate="animateState"
                      exit="exitState"
                      transition={{
                        duration: 0.75,
                      }}
                      variants={{
                        initialState: {
                          opacity: 0,
                          clipPath: "polygon(0 0, 100% 0, 100% 100%, 0% 100%)",
                        },
                        animateState: {
                          opacity: 1,
                          clipPath: "polygon(0 0, 100% 0, 100% 100%, 0% 100%)",
                        },
                        exitState: {
                          clipPath: clipPaths[Math.floor(Math.random() * clipPaths.length)],
                        },
                      }}
                    >
                      <m.Component />
                    </motion.div>
                  )
              )}
            </AnimatePresence>
          </div>
        </div>
      </section>
      <Toaster />
    </main>
  );
};

export async function getStaticProps() {
  const { data } = await client.query({
    query: profileOperations.Queries.getProfile,
  });

  return {
    props: {
      profileData: data.profiles[0],
      revalidate: 3600,
    },
  };
}

export default Home;
